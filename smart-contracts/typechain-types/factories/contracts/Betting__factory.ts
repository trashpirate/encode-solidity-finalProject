/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Betting, BettingInterface } from "../../contracts/Betting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "betDown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "betFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "betPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "betUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "book",
    outputs: [
      {
        internalType: "enum Betting.Position",
        name: "position",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claimPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closeRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "downPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "closingTime",
        type: "uint256",
      },
    ],
    name: "openRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ownerWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [
      {
        internalType: "contract MyERC20Token",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "prize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roundClosingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roundOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200186b3803806200186b8339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b61165480620002176000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638adf9c1f116100ad578063d709815411610071578063d7098154146102fd578063e15b4ebf14610319578063e278fe6f14610337578063ecfb49a314610341578063f2fde38b1461035f5761012c565b80638adf9c1f146102575780638da5cb5b14610287578063996a6318146102a5578063bde22ae0146102c3578063cfd8a175146102df5761012c565b80635e457cf8116100f45780635e457cf8146101c3578063715018a6146101df5780637ca81460146101e9578063841e6ce91461021b5780638ad206fb146102395761012c565b80632032677f146101315780632b65e0401461014f5780633013ce291461016d57806333f707d11461018b57806347d2a6c7146101a7575b600080fd5b61013961037b565b6040516101469190610e1b565b60405180910390f35b61015761038e565b6040516101649190610e4f565b60405180910390f35b610175610394565b6040516101829190610ee9565b60405180910390f35b6101a560048036038101906101a09190610f35565b6103ba565b005b6101c160048036038101906101bc9190610f35565b6104c4565b005b6101dd60048036038101906101d89190610f35565b6106a3565b005b6101e7610882565b005b61020360048036038101906101fe9190610fa0565b610896565b60405161021293929190611044565b60405180910390f35b6102236108da565b6040516102309190610e4f565b60405180910390f35b6102416108e0565b60405161024e9190610e4f565b60405180910390f35b610271600480360381019061026c9190610fa0565b6108e6565b60405161027e9190610e4f565b60405180910390f35b61028f6108fe565b60405161029c919061108a565b60405180910390f35b6102ad610927565b6040516102ba9190610e4f565b60405180910390f35b6102dd60048036038101906102d89190610f35565b61092d565b005b6102e76109ec565b6040516102f49190610e4f565b60405180910390f35b61031760048036038101906103129190610f35565b6109f2565b005b610321610b6e565b60405161032e9190610e4f565b60405180910390f35b61033f610b74565b005b610349610c2d565b6040516103569190610e4f565b60405180910390f35b61037960048036038101906103749190610fa0565b610c33565b005b600860009054906101000a900460ff1681565b60075481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103c2610cb6565b600754811115610407576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fe90611102565b60405180910390fd5b80600760008282546104199190611151565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161047d929190611185565b6020604051808303816000875af115801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c091906111da565b5050565b600860009054906101000a900460ff1680156104e1575060095442105b610520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051790611253565b60405180910390fd5b80600660008282546105329190611273565b925050819055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083600181111561059f5761059e610fcd565b5b021790555080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546105f69190611273565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161065c939291906112a7565b6020604051808303816000875af115801561067b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069f91906111da565b5050565b600860009054906101000a900460ff1680156106c0575060095442105b6106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f690611253565b60405180910390fd5b80600560008282546107119190611273565b925050819055506000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083600181111561077e5761077d610fcd565b5b021790555080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546107d59190611273565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161083b939291906112a7565b6020604051808303816000875af115801561085a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087e91906111da565b5050565b61088a610cb6565b6108946000610d34565b565b600b6020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020160009054906101000a900460ff16905083565b60035481565b60055481565b600a6020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60095481565b610935610cb6565b600860009054906101000a900460ff1615610985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097c9061132a565b60405180910390fd5b4281116109c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109be906113bc565b60405180910390fd5b806009819055506001600860006101000a81548160ff02191690831515021790555050565b60025481565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6b90611428565b60405180910390fd5b80600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ac39190611151565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b27929190611185565b6020604051808303816000875af1158015610b46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6a91906111da565b5050565b60065481565b610b7c610cb6565b600954421015610bc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb890611494565b60405180910390fd5b600860009054906101000a900460ff16610c10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0790611500565b60405180910390fd5b6000600860006101000a81548160ff021916908315150217905550565b60045481565b610c3b610cb6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610caa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca190611592565b60405180910390fd5b610cb381610d34565b50565b610cbe610df8565b73ffffffffffffffffffffffffffffffffffffffff16610cdc6108fe565b73ffffffffffffffffffffffffffffffffffffffff1614610d32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d29906115fe565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008115159050919050565b610e1581610e00565b82525050565b6000602082019050610e306000830184610e0c565b92915050565b6000819050919050565b610e4981610e36565b82525050565b6000602082019050610e646000830184610e40565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610eaf610eaa610ea584610e6a565b610e8a565b610e6a565b9050919050565b6000610ec182610e94565b9050919050565b6000610ed382610eb6565b9050919050565b610ee381610ec8565b82525050565b6000602082019050610efe6000830184610eda565b92915050565b600080fd5b610f1281610e36565b8114610f1d57600080fd5b50565b600081359050610f2f81610f09565b92915050565b600060208284031215610f4b57610f4a610f04565b5b6000610f5984828501610f20565b91505092915050565b6000610f6d82610e6a565b9050919050565b610f7d81610f62565b8114610f8857600080fd5b50565b600081359050610f9a81610f74565b92915050565b600060208284031215610fb657610fb5610f04565b5b6000610fc484828501610f8b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061100d5761100c610fcd565b5b50565b600081905061101e82610ffc565b919050565b600061102e82611010565b9050919050565b61103e81611023565b82525050565b60006060820190506110596000830186611035565b6110666020830185610e40565b6110736040830184610e0c565b949350505050565b61108481610f62565b82525050565b600060208201905061109f600083018461107b565b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f756768206665657320636f6c6c656374656400000000000000600082015250565b60006110ec6019836110a5565b91506110f7826110b6565b602082019050919050565b6000602082019050818103600083015261111b816110df565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061115c82610e36565b915061116783610e36565b925082820390508181111561117f5761117e611122565b5b92915050565b600060408201905061119a600083018561107b565b6111a76020830184610e40565b9392505050565b6111b781610e00565b81146111c257600080fd5b50565b6000815190506111d4816111ae565b92915050565b6000602082840312156111f0576111ef610f04565b5b60006111fe848285016111c5565b91505092915050565b7f42657474696e6720726f756e6420697320636c6f736564000000000000000000600082015250565b600061123d6017836110a5565b915061124882611207565b602082019050919050565b6000602082019050818103600083015261126c81611230565b9050919050565b600061127e82610e36565b915061128983610e36565b92508282019050808211156112a1576112a0611122565b5b92915050565b60006060820190506112bc600083018661107b565b6112c9602083018561107b565b6112d66040830184610e40565b949350505050565b7f42657474696e67206973206f70656e0000000000000000000000000000000000600082015250565b6000611314600f836110a5565b915061131f826112de565b602082019050919050565b6000602082019050818103600083015261134381611307565b9050919050565b7f436c6f73696e672074696d65206d75737420626520696e20746865206675747560008201527f7265000000000000000000000000000000000000000000000000000000000000602082015250565b60006113a66022836110a5565b91506113b18261134a565b604082019050919050565b600060208201905081810360008301526113d581611399565b9050919050565b7f4e6f7420656e6f756768207072697a6500000000000000000000000000000000600082015250565b60006114126010836110a5565b915061141d826113dc565b602082019050919050565b6000602082019050818103600083015261144181611405565b9050919050565b7f546f6f20736f6f6e20746f20636c6f7365000000000000000000000000000000600082015250565b600061147e6011836110a5565b915061148982611448565b602082019050919050565b600060208201905081810360008301526114ad81611471565b9050919050565b7f416c726561647920636c6f736564000000000000000000000000000000000000600082015250565b60006114ea600e836110a5565b91506114f5826114b4565b602082019050919050565b60006020820190508181036000830152611519816114dd565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061157c6026836110a5565b915061158782611520565b604082019050919050565b600060208201905081810360008301526115ab8161156f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006115e86020836110a5565b91506115f3826115b2565b602082019050919050565b60006020820190508181036000830152611617816115db565b905091905056fea264697066735822122016be557b2c1c0ff9f3c7780749ab873bb1fde11ea39dad8691a798cc1c7beadc64736f6c63430008130033";

type BettingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BettingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Betting__factory extends ContractFactory {
  constructor(...args: BettingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  override deploy(
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenAddress, overrides || {}) as Promise<
      Betting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Betting__factory {
    return super.connect(runner) as Betting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BettingInterface {
    return new Interface(_abi) as BettingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Betting {
    return new Contract(address, _abi, runner) as unknown as Betting;
  }
}
